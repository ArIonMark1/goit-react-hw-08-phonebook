{"version":3,"file":"static/js/340.4af23bb6.chunk.js","mappings":"6TAQMA,EAAa,CACjBC,MAAO,GACPC,SAAU,IAqEZ,EAlEkB,WAChB,OAA0BC,EAAAA,EAAAA,WAAS,UAAKH,IAAxC,eAAOI,EAAP,KAAcC,EAAd,KACA,GAAgBC,EAAAA,EAAAA,MAATC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtCV,GAAS,SAAAW,GAAS,yBAAUA,GAAV,cAAsBF,EAAOC,GAA7B,GACnB,EAEKE,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAIC,iBADe,kBAKSZ,EAAMH,GALf,YAKXgB,EALW,QAODC,MAPC,sBAQT,IAAIC,MAAMF,EAAYC,MAAME,KAAKC,SARxB,OAWbJ,EAAYG,OAEdb,GAASe,EAAAA,EAAAA,IAASL,EAAYG,KAAKG,eAEnCC,EAAAA,GAAAA,QAAA,uBAA8BvB,EAAMH,QACpCI,EAASL,GACTQ,EAAS,MAjBM,kDAqBjBmB,EAAAA,GAAAA,MAAA,kCAAuC,KAAIH,UAC3CnB,EAASL,GAtBQ,0DAAH,sDAyBlB,OACE,+BACE,kBAAM4B,UAAU,OAAOC,SAAUZ,EAAjC,WACE,mBAAOW,UAAU,QAAjB,WACE,mCACA,kBACEE,KAAK,QACLC,YAAY,SACZjB,KAAK,QACLC,MAAOX,EAAMH,MACb+B,SAAUpB,QAGd,mBAAOgB,UAAU,QAAjB,WACE,sCACA,kBACEE,KAAK,WACLC,YAAY,WACZjB,KAAK,WACLC,MAAOX,EAAMF,SACb8B,SAAUpB,QAGd,mBAAQgB,UAAU,sBAAsBE,KAAK,SAA7C,uBAMP,ECjED,EAVkB,WAChB,OACE,iBAAKF,UAAU,mBAAf,WACE,mCAEA,SAAC,EAAD,MAGL,C,uBCVD,SAASK,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBzB,EAAQ0B,EAAK1B,KAInB,CAHE,MAAOM,GAEP,YADAe,EAAOf,EAET,CAEIoB,EAAKC,KACPP,EAAQpB,GAER4B,QAAQR,QAAQpB,GAAO6B,KAAKP,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMtB,GACbkB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQvB,EAClE,CAEA,SAASuB,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPage.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import './LoginForm.scss';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useUserLoginMutation } from 'redux/features/authApi/authApi';\nimport { setToken } from 'redux/features/authApi/tokenSlice';\n\nconst INIT_STATE = {\n  email: '',\n  password: '',\n};\n\nconst LoginForm = () => {\n  const [state, setState] = useState({ ...INIT_STATE });\n  const [login] = useUserLoginMutation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const onSubmitForm = async evt => {\n    evt.preventDefault();\n\n    try {\n      // ***********************************************\n      const logedInUser = await login(state);\n      // ***********************************************\n      if (logedInUser.error) {\n        throw new Error(logedInUser.error.data.message);\n      }\n      // =================================================================\n      if (logedInUser.data) {\n        // ----------------------------------------------------------------\n        dispatch(setToken(logedInUser.data.access_token));\n        // ----------------------------------------------------------------\n        toast.success(`Welcome back ${state.email}`);\n        setState(INIT_STATE);\n        navigate('/');\n      }\n      // =================================================================\n    } catch (err) {\n      toast.error(`Sorry you can't log in. ${err.message}`);\n      setState(INIT_STATE);\n    }\n  };\n  return (\n    <>\n      <form className=\"form\" onSubmit={onSubmitForm}>\n        <label className=\"label\">\n          <h3>Email</h3>\n          <input\n            type=\"email\"\n            placeholder=\"E-mail\"\n            name=\"email\"\n            value={state.email}\n            onChange={handleChange}\n          />\n        </label>\n        <label className=\"label\">\n          <h3>Password</h3>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={state.password}\n            onChange={handleChange}\n          />\n        </label>\n        <button className=\"form__button button\" type=\"submit\">\n          Login\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <div className=\"container__login\">\n      <h2>Login</h2>\n\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["INIT_STATE","email","password","useState","state","setState","useUserLoginMutation","login","navigate","useNavigate","dispatch","useDispatch","handleChange","target","name","value","prevState","onSubmitForm","evt","preventDefault","logedInUser","error","Error","data","message","setToken","access_token","toast","className","onSubmit","type","placeholder","onChange","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}