{"version":3,"file":"static/js/27.ac777608.chunk.js","mappings":"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","sources":["hooks/AuthErrorMessage.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const AuthErrorMessage = statusError => {\n  // ***********************************************\n\n  console.log('error status: ', statusError);\n  switch (parseInt(statusError)) {\n    case 400:\n      return ` ${statusError}. Wrong user data. User already exsist. Try again please.`;\n\n    case 401:\n      return `Incorrect authenticate.\n          Missing header with authorization token.\n          LogIn please.`;\n\n    case 404:\n      return `${statusError} There is no such user collection.`;\n\n    case 500:\n      return 'Warning! Something wrong with server. The server is not responding.';\n\n    default:\n      return 'Warning! Internet disconected.';\n  }\n};\n","import { useEffect, useState } from 'react';\nimport { useUserRegisterMutation } from 'redux/features/authApi/authApi';\nimport './RegisterForm.scss';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { setToken } from 'redux/features/authApi/tokenSlice';\nimport { AuthErrorMessage } from 'hooks/AuthErrorMessage';\nimport './RegisterForm.scss';\n\nconst INIT_STATE = {\n  name: '',\n  email: '',\n  password: '',\n  avatar:\n    'https://ih1.redbubble.net/image.5075891342.0210/poster,504x498,f8f8f8-pad,600x600,f8f8f8.jpg',\n};\n\nconst RegisterForm = () => {\n  const [state, setState] = useState({ ...INIT_STATE });\n  // ----------------------------------------------------------------\n  const [\n    createUser,\n    {\n      data: createdUser,\n      isSuccess: isCreateSuccess,\n      isError: isCreateError,\n      error: createError,\n    },\n  ] = useUserRegisterMutation();\n\n  // ----------------------------------------------------------------\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    if ((state.name, state.email, state.password)) {\n      await createUser(state);\n    } else {\n      toast.error('Please fill all fields.');\n    }\n  };\n  const clearState = () => {\n    setState(INIT_STATE);\n  };\n\n  // ****************************************************************\n  useEffect(() => {\n    if (isCreateSuccess) {\n      // -----------------------------------------\n      dispatch(setToken(createdUser.token));\n      // -----------------------------------------\n      console.log(createdUser);\n      toast.success(`User ${createdUser.user.name} created successfully`);\n      navigate('/');\n    }\n    if (isCreateError) {\n      toast.error(AuthErrorMessage(createError.status));\n      clearState();\n    }\n  }, [\n    isCreateSuccess,\n    isCreateError,\n    createError,\n    createdUser,\n    navigate,\n    dispatch,\n  ]);\n\n  // ****************************************************************\n\n  return (\n    <>\n      <form className=\"form\" autoComplete=\"off\" onSubmit={handleSubmit}>\n        <label className=\"label\">\n          <h3>Name</h3>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={state.name}\n            placeholder=\"Name\"\n            onChange={handleChange}\n          />\n        </label>\n        <label className=\"label\">\n          <h3>Email</h3>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={state.email}\n            placeholder=\"E-mail\"\n            onChange={handleChange}\n          />\n        </label>\n        <label className=\"label\">\n          <h3>Password</h3>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={state.password}\n            placeholder=\"Password\"\n            onChange={handleChange}\n          />\n        </label>\n        <button className=\"form__button button\" type=\"submit\">\n          Registration\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <div className=\"container__register\">\n      <h2 className=\"register__header\">Registration</h2>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["AuthErrorMessage","statusError","console","log","parseInt","INIT_STATE","name","email","password","avatar","useState","state","setState","useUserRegisterMutation","createUser","createdUser","data","isCreateSuccess","isSuccess","isCreateError","isError","createError","error","navigate","useNavigate","dispatch","useDispatch","handleChange","target","value","prevState","handleSubmit","evt","preventDefault","toast","useEffect","setToken","token","user","status","className","autoComplete","onSubmit","type","placeholder","onChange","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}