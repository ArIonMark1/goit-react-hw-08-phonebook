{"version":3,"file":"static/js/459.0001a46e.chunk.js","mappings":"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","sources":["components/ErrorMessage.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/clsx/dist/clsx.m.js","components/ContactForm/ContactForm.jsx","components/FilterContacts/FilterContacts.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.js","redux/contacts/selectors.js"],"sourcesContent":["import { useState } from 'react';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { selectError } from 'redux/auth/selectors';\n// import { selectContactsState } from 'redux/contacts/selectors';\nimport { selectContactsError } from 'redux/contacts/selectors';\n\nexport const ErrorMessage = () => {\n  const [customMessage, setCustomMessage] = useState('');\n\n  const contactsError = useSelector(selectContactsError);\n  const authError = useSelector(selectError);\n\n  const error = contactsError || authError;\n  useState(() => {\n    if (!error) {\n      return;\n    }\n    console.log(error);\n    const codeArray = error\n      .split('')\n      .filter(el => parseInt(el) || parseInt(el) === 0)\n      .join('');\n\n    switch (parseInt(codeArray)) {\n      case 400:\n        setCustomMessage(`${error}. Wrong user data. Try again please.`);\n        break;\n      case 401:\n        setCustomMessage(\n          'Incorrect authenticate . Missing header with authorization token.'\n        );\n        break;\n      case 404:\n        setCustomMessage('There is no such user collection.');\n        break;\n      case 500:\n        setCustomMessage(\n          'Warning! Something wrong with server. The server is not responding.'\n        );\n        break;\n      default:\n        setCustomMessage('Warning! Internet disconected.');\n        break;\n    }\n  }, [error]);\n\n  return (\n    <div className=\"containerMessage\">\n      <p className=\"errorMessage\">{customMessage}</p>\n    </div>\n  );\n};\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { useState } from 'react';\nimport './ContactForm.scss';\nimport { toast } from 'react-toastify';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { createContacts } from 'redux/contacts/operations';\n\nexport default function ContactForm() {\n  //   //форма додавання контакту\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const listContacts = useSelector(selectContacts);\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  function formSubmit(evt) {\n    /* відправка даних контакту при сабміті, перевірка на співпадіння та пусте ім'я  */\n    evt.preventDefault();\n    const controlName = !name.trim() ? 'empty' : name.trim();\n    console.log(name, number);\n    const dublicatedContact = listContacts.find(\n      contact => contact.name === controlName && contact.phone === number\n    );\n    if (dublicatedContact) {\n      toast.error(`${controlName} already in contacts.`);\n      formReset();\n      return;\n    }\n    // ===================================================\n    dispatch(createContacts({ name: controlName, number }));\n    // ===================================================\n    toast.success(`${controlName} added to contacts.`);\n    formReset();\n  }\n\n  return (\n    <form id=\"form\" className=\"contactForm form\" onSubmit={formSubmit}>\n      <label className=\"label\">\n        Name\n        <br />\n        <input\n          className=\"nameField\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={evt => setName(evt.currentTarget.value)}\n          placeholder=\"Enter contact name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className=\"label\">\n        Number\n        <br />\n        <input\n          className=\"nameField\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={evt => setNumber(evt.currentTarget.value)}\n          placeholder=\"Enter number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className=\"button createContact\" type=\"submit\">\n        <span>Add contact</span>\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport './FilterContacts.scss';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filterSlice';\n\nexport default function FilterContacts() {\n  // пише дані в стейт при будь-якій зміні передає значення для обробки\n  // ********************************\n  const dispatch = useDispatch();\n\n  function handleFilterData(evt) {\n    const filterData = evt.target.value.toLowerCase();\n    dispatch(filterContacts(filterData.trim()));\n  }\n  // ********************************\n\n  return (\n    <label className=\"filterLabel\">\n      <p>Find contact by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        className=\"nameField\"\n        onChange={handleFilterData}\n        placeholder=\"Filter contacts...\"\n      ></input>\n    </label>\n  );\n}\n","import React from 'react';\nimport './ContactList.scss';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\n// import { deleteContacts } from 'redux/contacts/operations';\n\nconst ContactList = () => {\n  // *******************************************************\n  const listContacts = useSelector(selectContacts);\n  const filterData = useSelector(selectFilter);\n  // const dispatch = useDispatch();\n  // -------------------------------------------------------\n  // const removeContact = id => dispatch(deleteContacts(id));\n  // *******************************************************\n\n  const newListContacts = listContacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterData)\n  ); // перевірка чи є такі символи в імені контакту\n  return (\n    <div>\n      <div className=\"contactsContainer\">\n        <h2>Contacts</h2>\n        <ul className=\"contactsList\">\n          {newListContacts.map(contact => (\n            <li key={contact.id}>\n              <div className=\"container-content\">\n                Name:\n                <span className=\"content\"> {contact.name}</span>\n                Phone:\n                <span className=\"content\"> {contact.number}</span>\n                <button\n                  className=\"button\"\n                  type=\"button\"\n                  // onClick={() => {\n                  //   removeContact(contact.id);\n                  // }}\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SyncLoader } from 'react-spinners';\nimport ContactForm from 'components/ContactForm';\nimport FilterContacts from 'components/FilterContacts/FilterContacts';\nimport ContactList from 'components/ContactList';\nimport { selectContactsState } from 'redux/contacts/selectors';\nimport { getContactList } from 'redux/contacts/operations';\nimport { ErrorMessage } from 'components/ErrorMessage';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(selectContactsState);\n  console.log(error);\n  useEffect(() => {\n    dispatch(getContactList());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <h2>Phone Book</h2>\n      <ContactForm />\n      {isLoading && (\n        <div className=\"loaderBlock\">\n          <SyncLoader\n            color=\"steelblue\"\n            cssOverride={{\n              margin: '0 auto',\n            }}\n            size={18}\n          />\n          <p>Loading tasks...</p>\n        </div>\n      )}\n      <div className=\"contactContainer\">\n        {error && <ErrorMessage />}\n\n        {items.length !== 0 && (\n          <>\n            <FilterContacts />\n            <ContactList />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n","export const selectContactsState = state => state.contacts;\nexport const selectContacts = state => state.contacts.items;\nexport const selectContactsError = state => state.contacts.error;\nexport const selectFilter = state => state.filters;\n"],"names":["ErrorMessage","useState","customMessage","setCustomMessage","contactsError","useSelector","selectContactsError","authError","selectError","error","console","log","codeArray","split","filter","el","parseInt","join","className","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","r","e","t","f","n","Array","isArray","arguments","ContactForm","name","setName","number","setNumber","dispatch","useDispatch","listContacts","selectContacts","formReset","id","onSubmit","evt","preventDefault","controlName","trim","find","contact","phone","toast","createContacts","type","value","onChange","currentTarget","placeholder","pattern","title","required","FilterContacts","filterData","toLowerCase","filterContacts","selectFilter","newListContacts","includes","map","selectContactsState","items","isLoading","useEffect","getContactList","SyncLoader","color","cssOverride","margin","size","state","contacts","filters"],"sourceRoot":""}