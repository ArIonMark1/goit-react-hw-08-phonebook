{"version":3,"file":"static/js/340.3d178ad9.chunk.js","mappings":"6KAAO,IAAMA,EAAe,WAyB1B,OAtBoB,SAAAC,GAElB,OADAC,QAAQC,IAAI,iBAAkBF,GACtBG,SAASH,IACf,KAAK,IACH,MAAM,IAAN,OAAWA,EAAX,6DAEF,KAAK,IACH,MAAM,uGAIR,KAAK,IACH,MAAM,GAAN,OAAUA,EAAV,sCAEF,KAAK,IACH,MAAO,sEAET,QACE,MAAO,iCAEZ,CAGF,C,iNCjBKI,EAAa,CACjBC,MAAO,GACPC,SAAU,IAwEZ,EArEkB,WAChB,OAA0BC,EAAAA,EAAAA,WAAS,UAAKH,IAAxC,eAAOI,EAAP,KAAcC,EAAd,KACA,GAAgBC,EAAAA,EAAAA,MAATC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAejB,EAAAA,EAAAA,KAEfkB,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtCX,GAAS,SAAAY,GAAS,yBAAUA,GAAV,cAAsBF,EAAOC,GAA7B,GACnB,EAEKE,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAIC,iBADe,kBAKSb,EAAMH,GALf,YAKXiB,EALW,QAODC,MAPC,sBAQT,IAAIC,MAAMF,EAAYC,MAAME,QARnB,OAWbH,EAAYI,OAEdf,GAASgB,EAAAA,EAAAA,IAASL,EAAYI,KAAKE,QAEnCC,EAAAA,GAAAA,QAAA,uBAA8BxB,EAAMH,QACpCI,EAASL,GACTQ,EAAS,MAjBM,kDAsBjBoB,EAAAA,GAAAA,MAAA,kCAAuChB,EAAa,KAAIiB,WAExDxB,EAASL,GAxBQ,0DAAH,sDA2BlB,OACE,+BACE,kBAAM8B,UAAU,OAAOC,SAAUb,EAAjC,WACE,mBAAOY,UAAU,QAAjB,WACE,mCACA,kBACEE,KAAK,QACLC,YAAY,SACZlB,KAAK,QACLC,MAAOZ,EAAMH,MACbiC,SAAUrB,QAGd,mBAAOiB,UAAU,QAAjB,WACE,sCACA,kBACEE,KAAK,WACLC,YAAY,WACZlB,KAAK,WACLC,MAAOZ,EAAMF,SACbgC,SAAUrB,QAGd,mBAAQiB,UAAU,sBAAsBE,KAAK,SAA7C,uBAMP,ECrED,EAVkB,WAChB,OACE,iBAAKF,UAAU,mBAAf,WACE,mCAEA,SAAC,EAAD,MAGL,C,uBCVD,SAASK,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChB1B,EAAQ2B,EAAK3B,KAInB,CAHE,MAAOM,GAEP,YADAgB,EAAOhB,EAET,CAEIqB,EAAKC,KACPP,EAAQrB,GAER6B,QAAQR,QAAQrB,GAAO8B,KAAKP,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMvB,GACbmB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQxB,EAClE,CAEA,SAASwB,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/ErrorMessage.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const ErrorMessage = () => {\n  // ***********************************************\n\n  const handleError = statusError => {\n    console.log('error status: ', statusError);\n    switch (parseInt(statusError)) {\n      case 400:\n        return ` ${statusError}. Wrong user data. User already exsist. Try again please.`;\n\n      case 401:\n        return `Incorrect authenticate.\n          Missing header with authorization token.\n          LogIn please.`;\n\n      case 404:\n        return `${statusError} There is no such user collection.`;\n\n      case 500:\n        return 'Warning! Something wrong with server. The server is not responding.';\n\n      default:\n        return 'Warning! Internet disconected.';\n    }\n  };\n\n  return handleError;\n};\n","import './LoginForm.scss';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useUserLoginMutation } from 'redux/features/authApi/authApi';\nimport { setToken } from 'redux/features/authApi/tokenSlice';\nimport { ErrorMessage } from 'components/ErrorMessage';\n\nconst INIT_STATE = {\n  email: '',\n  password: '',\n};\n\nconst LoginForm = () => {\n  const [state, setState] = useState({ ...INIT_STATE });\n  const [login] = useUserLoginMutation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const controlError = ErrorMessage();\n\n  const handleChange = ({ target: { name, value } }) => {\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const onSubmitForm = async evt => {\n    evt.preventDefault();\n\n    try {\n      // ***********************************************\n      const logedInUser = await login(state);\n      // ***********************************************\n      if (logedInUser.error) {\n        throw new Error(logedInUser.error.status);\n      }\n      // =================================================================\n      if (logedInUser.data) {\n        // ----------------------------------------------------------------\n        dispatch(setToken(logedInUser.data.token));\n        // ----------------------------------------------------------------\n        toast.success(`Welcome back ${state.email}`);\n        setState(INIT_STATE);\n        navigate('/');\n      }\n      // =================================================================\n    } catch (err) {\n      // -------------------------------------------\n      toast.error(`Sorry you can't log in. ${controlError(err.message)}`);\n      // -------------------------------------------\n      setState(INIT_STATE);\n    }\n  };\n  return (\n    <>\n      <form className=\"form\" onSubmit={onSubmitForm}>\n        <label className=\"label\">\n          <h3>Email</h3>\n          <input\n            type=\"email\"\n            placeholder=\"E-mail\"\n            name=\"email\"\n            value={state.email}\n            onChange={handleChange}\n          />\n        </label>\n        <label className=\"label\">\n          <h3>Password</h3>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={state.password}\n            onChange={handleChange}\n          />\n        </label>\n        <button className=\"form__button button\" type=\"submit\">\n          Login\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <div className=\"container__login\">\n      <h2>Login</h2>\n\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["ErrorMessage","statusError","console","log","parseInt","INIT_STATE","email","password","useState","state","setState","useUserLoginMutation","login","navigate","useNavigate","dispatch","useDispatch","controlError","handleChange","target","name","value","prevState","onSubmitForm","evt","preventDefault","logedInUser","error","Error","status","data","setToken","token","toast","message","className","onSubmit","type","placeholder","onChange","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}