{"version":3,"file":"static/js/340.5907e6ca.chunk.js","mappings":"4OAMaA,EAAe,WAC1B,OAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAEMC,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC5BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAExBC,EAAQL,GAAiBG,EAkC/B,OAjCAN,EAAAA,EAAAA,WAAS,WACP,GAAKQ,EAAL,CAGAC,QAAQC,IAAIF,GACZ,IAAMG,EAAYH,EACfI,MAAM,IACNC,QAAO,SAAAC,GAAE,OAAIC,SAASD,IAAwB,IAAjBC,SAASD,EAA7B,IACTE,KAAK,IAER,OAAQD,SAASJ,IACf,KAAK,IACHT,EAAiB,GAAD,OAAIM,EAAJ,yCAChB,MACF,KAAK,IACHN,EACE,qEAEF,MACF,KAAK,IACHA,EAAiB,qCACjB,MACF,KAAK,IACHA,EACE,uEAEF,MACF,QACEA,EAAiB,kCAzBpB,CA4BF,GAAE,CAACM,KAGF,gBAAKS,UAAU,mBAAf,UACE,cAAGA,UAAU,eAAb,SAA6BhB,KAGlC,C,6ICED,EA9CkB,WAChB,OAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOkB,EAAP,KAAcC,EAAd,KACA,GAAgCnB,EAAAA,EAAAA,UAAS,IAAzC,eAAOoB,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MACXf,GAAQJ,EAAAA,EAAAA,IAAYG,EAAAA,IAC1BE,QAAQC,IAAI,UAAWF,GAUvB,OACE,+BACE,kBAAMS,UAAU,OAAOO,SAVN,SAAAC,GACnBA,EAAIC,iBACJjB,QAAQC,IAAI,CAAEQ,MAAAA,EAAOE,SAAAA,IACrBE,GAASK,EAAAA,EAAAA,IAAU,CAAET,MAAAA,EAAOE,SAAAA,KAE5BD,EAAS,IACTE,EAAY,GACb,EAGG,UACGb,IAAS,SAACT,EAAA,EAAD,KACV,mBAAOkB,UAAU,QAAjB,WACE,mCACA,kBACEW,KAAK,QACLC,YAAY,SACZC,MAAOZ,EACPa,SAAU,SAAAN,GAAG,OAAIN,EAASM,EAAIO,cAAcF,MAA/B,QAGjB,mBAAOb,UAAU,QAAjB,WACE,sCACA,kBACEW,KAAK,WACLC,YAAY,WACZC,MAAOV,EACPW,SAAU,SAAAN,GAAG,OAAIJ,EAAYI,EAAIO,cAAcF,MAAlC,QAGjB,mBAAQb,UAAU,sBAAsBW,KAAK,SAA7C,uBAMP,ECvCD,EAVkB,WAChB,OACE,iBAAKX,UAAU,mBAAf,WACE,mCAEA,SAAC,EAAD,MAGL,C,gICVM,IAAMgB,EAAsB,SAAAC,GAAK,OAAIA,EAAMC,QAAV,EAC3BC,EAAiB,SAAAF,GAAK,OAAIA,EAAMC,SAASE,KAAnB,EACtBhC,EAAsB,SAAA6B,GAAK,OAAIA,EAAMC,SAAS3B,KAAnB,EAC3B8B,EAAe,SAAAJ,GAAK,OAAIA,EAAMK,OAAV,C","sources":["components/ErrorMessage.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.js","redux/contacts/selectors.js"],"sourcesContent":["import { useState } from 'react';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { selectError } from 'redux/auth/selectors';\n// import { selectContactsState } from 'redux/contacts/selectors';\nimport { selectContactsError } from 'redux/contacts/selectors';\n\nexport const ErrorMessage = () => {\n  const [customMessage, setCustomMessage] = useState('');\n\n  const contactsError = useSelector(selectContactsError);\n  const authError = useSelector(selectError);\n\n  const error = contactsError || authError;\n  useState(() => {\n    if (!error) {\n      return;\n    }\n    console.log(error);\n    const codeArray = error\n      .split('')\n      .filter(el => parseInt(el) || parseInt(el) === 0)\n      .join('');\n\n    switch (parseInt(codeArray)) {\n      case 400:\n        setCustomMessage(`${error}. Wrong user data. Try again please.`);\n        break;\n      case 401:\n        setCustomMessage(\n          'Incorrect authenticate . Missing header with authorization token.'\n        );\n        break;\n      case 404:\n        setCustomMessage('There is no such user collection.');\n        break;\n      case 500:\n        setCustomMessage(\n          'Warning! Something wrong with server. The server is not responding.'\n        );\n        break;\n      default:\n        setCustomMessage('Warning! Internet disconected.');\n        break;\n    }\n  }, [error]);\n\n  return (\n    <div className=\"containerMessage\">\n      <p className=\"errorMessage\">{customMessage}</p>\n    </div>\n  );\n};\n","import './LoginForm.scss';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userLogIn } from 'redux/auth/auth-operations';\nimport { selectError } from 'redux/auth/selectors';\nimport { ErrorMessage } from 'components/ErrorMessage';\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  console.log('Login: ', error);\n\n  const onSubmitForm = evt => {\n    evt.preventDefault();\n    console.log({ email, password });\n    dispatch(userLogIn({ email, password }));\n\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <>\n      <form className=\"form\" onSubmit={onSubmitForm}>\n        {error && <ErrorMessage />}\n        <label className=\"label\">\n          <h3>Email</h3>\n          <input\n            type=\"email\"\n            placeholder=\"E-mail\"\n            value={email}\n            onChange={evt => setEmail(evt.currentTarget.value)}\n          />\n        </label>\n        <label className=\"label\">\n          <h3>Password</h3>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={evt => setPassword(evt.currentTarget.value)}\n          />\n        </label>\n        <button className=\"form__button button\" type=\"submit\">\n          Login\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <div className=\"container__login\">\n      <h2>Login</h2>\n\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","export const selectContactsState = state => state.contacts;\nexport const selectContacts = state => state.contacts.items;\nexport const selectContactsError = state => state.contacts.error;\nexport const selectFilter = state => state.filters;\n"],"names":["ErrorMessage","useState","customMessage","setCustomMessage","contactsError","useSelector","selectContactsError","authError","selectError","error","console","log","codeArray","split","filter","el","parseInt","join","className","email","setEmail","password","setPassword","dispatch","useDispatch","onSubmit","evt","preventDefault","userLogIn","type","placeholder","value","onChange","currentTarget","selectContactsState","state","contacts","selectContacts","items","selectFilter","filters"],"sourceRoot":""}